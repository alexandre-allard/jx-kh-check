apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: release
spec:
  pipelineSpec:
    tasks:
    - name: chart
      resources: {}
      taskSpec:
        metadata: {}
        stepTemplate:
          image: uses:jenkins-x/jx3-pipeline-catalog/tasks/go-plugin/release.yaml@versionStream
          name: ""
          resources: {}
          workingDir: /workspace/source
        steps:
        - image: uses:jenkins-x/jx3-pipeline-catalog/tasks/git-clone/git-clone.yaml@versionStream
          name: ""
          resources: {}
        - name: next-version
          resources: {}
        - name: jx-variables
          resources: {}
        - image: golang:1.15
          name: release-binary
          resources: {}
          script: |
            #!/usr/bin/env sh
            source .jx/variables.sh
            make release
        - image: gcr.io/kaniko-project/executor:debug-v1.3.0
          name: build-and-push-image
          resources: {}
          script: |
            #!/busybox/sh
            source .jx/variables.sh
            cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json

            /kaniko/executor $KANIKO_FLAGS --context=/workspace/source/cmd/jx-bot-token --dockerfile=/workspace/source/cmd/jx-bot-token/Dockerfile --destination=ghcr.io/jenkins-x/jx-bot-token:$VERSION
            /kaniko/executor $KANIKO_FLAGS --context=/workspace/source/cmd/jx-install --dockerfile=/workspace/source/cmd/jx-install/Dockerfile  --destination=ghcr.io/jenkins-x/jx-install:$VERSION
            /kaniko/executor $KANIKO_FLAGS --context=/workspace/source/cmd/jx-pod-status --dockerfile=/workspace/source/cmd/jx-pod-status/Dockerfile --destination=ghcr.io/jenkins-x/jx-pod-status:$VERSION
            /kaniko/executor $KANIKO_FLAGS --context=/workspace/source/cmd/jx-secrets --dockerfile=/workspace/source/cmd/jx-secrets/Dockerfile --destination=ghcr.io/jenkins-x/jx-secrets:$VERSION
            /kaniko/executor $KANIKO_FLAGS --context=/workspace/source/cmd/jx-webhooks --dockerfile=/workspace/source/cmd/jx-webhooks/Dockerfile --destination=ghcr.io/jenkins-x/jx-webhooks:$VERSION
            /kaniko/executor $KANIKO_FLAGS --context=/workspace/source/cmd/jx-webhook-events --dockerfile=/workspace/source/cmd/jx-webhook-events/Dockerfile --destination=ghcr.io/jenkins-x/jx-webhook-events:$VERSION
            /kaniko/executor $KANIKO_FLAGS --context=/workspace/source/cmd/pod-restarts-check --dockerfile=/workspace/source/cmd/pod-restarts-check/Dockerfile --destination=ghcr.io/jenkins-x/pod-restarts-check:$VERSION
        - name: chart-docs
          resources: {}
        - image: ghcr.io/jenkins-x/jx-changelog:0.0.43
          name: changelog
          resources: {}
          script: |
            #!/usr/bin/env sh
            source .jx/variables.sh
            sleep infinity
            if [ -d "charts/$REPO_NAME" ]; then
            jx gitops yset -p version -v "$VERSION" -f ./charts/$REPO_NAME/Chart.yaml
            jx gitops yset -p appVersion -v "$VERSION" -f ./charts/$REPO_NAME/Chart.yaml
            jx gitops yset -p 'image.repository' -v $DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME -f ./charts/$REPO_NAME/values.yaml
            jx gitops yset -p 'image.tag' -v "$VERSION" -f ./charts/$REPO_NAME/values.yaml;
            else echo no charts; fi

            jx changelog create --verbose --header-file=hack/changelog-header.md --version=$VERSION --rev=$PULL_BASE_SHA --output-markdown=changelog.md --update-release=true
        - name: release-chart
          resources: {}
        - name: promote-release
          resources: {}
  podTemplate: {}
  serviceAccountName: tekton-bot
  timeout: 240h0m0s
status: {}
